name: CI/CD Pipeline for Crazy Donut - [PRODUCTION]

on:
  push:
    branches: [ "main" ]
    paths:
      - 'app/**'
      - 'client/**'
      - '.github/workflows/**'

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Check for file changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'app/**'
              - 'requirements.txt'
              - 'Dockerfile.backend'
            frontend:
              - 'client/**'
              - 'package.json'
              - 'package-lock.json'
              - 'Dockerfile.frontend'

  build-backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        working-directory: ./app
        run: |
          pip install --no-cache-dir -r requirements.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_TOKEN }}

      - name: Docker Build and Push (Backend)
        id: build-push-backend
        uses: docker/build-push-action@v3
        with:
          context: ./app
          file: ./app/Dockerfile
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/kaizerpwn/crazy-donut-backend:${{ github.sha }}
            ghcr.io/kaizerpwn/crazy-donut-backend:latest

  build-frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        working-directory: ./client
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build Frontend App
        working-directory: ./client
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_TOKEN }}

      - name: Docker Build and Push (Frontend)
        id: build-push-frontend
        uses: docker/build-push-action@v3
        with:
          context: ./client
          file: ./client/Dockerfile
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/kaizerpwn/crazy-donut-frontend:${{ github.sha }}
            ghcr.io/kaizerpwn/crazy-donut-frontend:latest

  update-infra:
    runs-on: ubuntu-latest
    needs: [changes, build-backend, build-frontend]
    if: ${{ needs.changes.outputs.backend == 'true' || needs.changes.outputs.frontend == 'true' }}

    steps:
      - name: Checkout Infra Repository
        uses: actions/checkout@v4
        with:
          repository: kaizerpwn/infrastructure
          ref: 'main'
          token: ${{ secrets.INFRASTRUCTURE_TOKEN }}
          path: infrastructure

      - name: Verify File Presence
        run: |
          echo "Checking file presence:"
          ls -la infrastructure/crazy-donut
          cat infrastructure/crazy-donut/backend-deployment.yml
          cat infrastructure/crazy-donut/frontend-deployment.yml

      - name: Update Backend Deployment Manifest
        if: ${{ needs.changes.outputs.backend == 'true' }}
        run: |
          echo "Updating backend deployment manifest:"
          sed -i "s|image: ghcr.io/kaizerpwn/crazy-donut-backend:.*|image: ghcr.io/kaizerpwn/crazy-donut-backend:${{ github.sha }}|g" infrastructure/crazy-donut/backend-deployment.yml

      - name: Update Frontend Deployment Manifest
        if: ${{ needs.changes.outputs.frontend == 'true' }}
        run: |
          echo "Updating frontend deployment manifest:"
          sed -i "s|image: ghcr.io/kaizerpwn/crazy-donut-frontend:.*|image: ghcr.io/kaizerpwn/crazy-donut-frontend:${{ github.sha }}|g" infrastructure/crazy-donut/frontend-deployment.yml

      - name: Stage and Commit Changes
        run: |
          cd infrastructure
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add crazy-donut/backend-deployment.yml crazy-donut/frontend-deployment.yml
          git status
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update images to version ${{ github.sha }} for arm64"
            git push origin main
          fi
